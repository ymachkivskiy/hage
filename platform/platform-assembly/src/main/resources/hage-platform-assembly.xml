<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd ">

    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>

    <import resource="classpath*:**/module-spring-conf.xml"/>

    <bean id="hage.component.stateful.base" abstract="true" init-method="init" destroy-method="finish"/>

    <context:component-scan base-package="org.hage.platform" />



    <!--old communication-->

    <bean id="hage.platform.communication"
          class="org.hage.communication.hazelcast.HazelcastRemoteCommunicationManager"/>

    <bean id="hage.service.configuration.communication.remote"
          class="org.hage.platform.config.distributed.link.ConfigurationRemoteChanel"
          parent="hage.component.stateful.base"/>

    <bean id="hage.service.lifecycle.communication.remote"
          class="org.hage.platform.component.lifecycle.communication.LifecycleManagerRemoteChanel"
          parent="hage.component.stateful.base"/>

    <bean id="hage.service.performance.communication.remote"
          class="org.hage.platform.component.rate.cluster.communication.PerformanceRemoteChanel"
          parent="hage.component.stateful.base"/>

    <!--old platform -->

    <bean id="hage.platform.di.container"
          class="org.hage.platform.component.pico.PicoComponentInstanceProviderFactory"
          factory-method="createInstanceProvider"/>

    <bean id="hage.platform.component.core"
          class="org.hage.platform.component.workplace.manager.DefaultWorkplaceManager"
          parent="hage.component.stateful.base"/>

    <bean id="hage.platform.lifecycle.exitHook"
          class="org.hage.platform.component.lifecycle.AutoExitHook"/>

    <bean id="hage.platform.lifecycle"
          class="org.hage.platform.component.lifecycle.DefaultLifecycleManager"/>

    <bean id="hage.platform.configuration.loader"
          class="org.hage.platform.config.xml.XmlConfigurationProvider"/>

    <bean id="hage.platform.configuration.splitter"
          class="org.hage.platform.config.local.division.SimpleConfigurationSplitter"/>

    <bean id="hage.platform.addressSupplier.agent"
          class="org.hage.address.agent.DefaultAgentAddressSupplier"/>

    <bean id="hage.platform.stopCondition"
          class="org.hage.platform.component.workplace.FixedStepCountStopCondition"
          parent="hage.component.stateful.base"/>

    <bean id="hage.platform.actionComparator"
          class="org.hage.platform.component.action.ordering.DefaultActionComparator"
          scope="prototype"/>

    <bean class="org.hage.platform.config.ConfigurationConversionService"/>

    <alias name="hage.platform.communication" alias="hage.platform.addressSupplier.node"/>

    <bean class="org.hage.platform.containermerge.ContainerComponentShare" init-method="shareComponents">
        <property name="componentsForSharing">
            <list>
                <ref bean="hage.platform.addressSupplier.node"/>
                <ref bean="hage.platform.addressSupplier.agent"/>
            </list>
        </property>
    </bean>

    <!--old services-->

    <bean id="hage.service.configuration"
          class="org.hage.platform.config.local.ConfigurationStorageService"/>

    <bean id="hage.service.configurationLoader"
          class="org.hage.platform.config.local.ConfigurationLoaderService"/>

    <bean id="hage.service.configurationSplitter"
          class="org.hage.platform.config.distributed.ConfigurationSplitService"/>

    <bean id="hage.service.configurationSplitter.ConfSplitterWorker"
          class="org.hage.platform.config.distributed.PerformanceProportionsBasedConfigurationSplitAllocator"/>

    <bean id="hage.service.performance.NodePerformanceManager" class="org.hage.platform.component.rate.node.CombinedNodePerformanceManager">
        <property name="measurers">
            <list>
                <bean class="org.hage.platform.component.rate.node.measure.impl.MaxMemoryPerformanceMeasurer"/>
                <bean class="org.hage.platform.component.rate.node.measure.impl.ConcurrencyPerformanceMeasurer"/>
            </list>
        </property>
    </bean>

    <bean id="hage.service.performance.normalizer.scaled" class="org.hage.platform.component.rate.node.normalize.scaled.ScaledNormalizerProvider"/>

    <bean id="hage.service.performance.ClusterPerformanceManager" class="org.hage.platform.component.rate.cluster.CombinedClusterPerformanceManager"/>

</beans>